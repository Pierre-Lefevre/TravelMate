<?php

namespace TM\ChatBundle\Repository;

use DateTime;
use Doctrine\DBAL\Types\Type;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends \Doctrine\ORM\EntityRepository
{
    public function findMessagesOfConversation($idUser1, $idUser2)
    {
        $query = $this->createQueryBuilder('m')
            ->where('m.sender = :id_sender1 AND m.receiver = :id_receiver1')
            ->setParameter('id_sender1', $idUser1)
            ->setParameter('id_receiver1', $idUser2)
            ->orWhere('m.sender = :id_sender2 AND m.receiver = :id_receiver2')
            ->setParameter('id_sender2', $idUser2)
            ->setParameter('id_receiver2', $idUser1)
            ->orderBy('m.date')
            ->getQuery();

        return $query->getResult();
    }

    public function findNewMessage($idUser1, $idUser2, $dateMin, $dateMax)
    {
        $dateTimeMin = new DateTime();
        $dateTimeMin->setTimestamp(round($dateMin / 1000));

        $dateTimeMax = new DateTime();
        $dateTimeMax->setTimestamp(round($dateMax / 1000));

        $query = $this->createQueryBuilder('m')
            ->where('m.sender = :id_sender AND m.receiver = :id_receiver')
            ->setParameter('id_sender', $idUser2)
            ->setParameter('id_receiver', $idUser1)
            ->andWhere('m.date >= :dateMin AND m.date < :dateMax')
            ->setParameter('dateMin', $dateTimeMin->format("Y-m-d H:i:s"))
            ->setParameter('dateMax', $dateTimeMax->format("Y-m-d H:i:s"))
            ->orderBy('m.date')
            ->getQuery();

        return $query->getResult();
    }
}
